version: "3.9"

services:
  consul:
    image: hashicorp/consul:latest
    container_name: consul
    hostname: consul
    ports:
      - "8500:8500"       
    networks:
      shared-net:
        ipv4_address: 192.168.56.2
    command: "agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0"

  glusterfs-node1:
    build: ./media-domain/
    container_name: glusterfs-node1
    hostname: glusterfs-node1
    volumes:
      - glusterfs-data1:/data
    networks:
      glusterfs-net:
        ipv4_address: 192.168.1.11
    privileged: true
    ports:
      - "8081:80"
    command: >
      /bin/sh -c "
      ./entrypoint.sh glusterfs-node2 glusterfs-node3 &&

      gluster volume create gv0 replica 3 transport tcp glusterfs-node1:/data/brick glusterfs-node2:/data/brick glusterfs-node3:/data/brick force &&
      gluster volume start gv0 &&
      gluster volume info &&

      ./setup.sh &&
      tail -f /dev/null"

  glusterfs-node2:
    build: ./media-domain/
    container_name: glusterfs-node2
    hostname: glusterfs-node2
    volumes:
      - glusterfs-data2:/data
    networks:
      glusterfs-net:
        ipv4_address: 192.168.1.12
    privileged: true
    ports:
      - "8082:80"
    command: >
      /bin/sh -c "
      ./entrypoint.sh glusterfs-node1 &&
      ./setup.sh &&
      tail -f /dev/null"

  glusterfs-node3:
    build: ./media-domain/
    container_name: glusterfs-node3
    hostname: glusterfs-node3
    volumes:
      - glusterfs-data3:/data
    networks:
      glusterfs-net:
        ipv4_address: 192.168.1.13
    privileged: true
    ports:
      - "8083:80"
    command: >
      /bin/sh -c "
      ./entrypoint.sh glusterfs-node1 && 
      ./setup.sh &&
      tail -f /dev/null"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.5
    container_name: elasticsearch
    hostname: elasticsearch
    networks:
      shared-net:
        ipv4_address: 192.168.56.4
    ports:
      - "9200:9200" 
    environment:
      - CONSUL_PORT=8500
      - CONSUL_HOST=192.168.56.2 
      - ELASTIC_PASSWORD=lyfAKzoo0NYA17iIBmv4
  
  # this service merely pushes all configs/services to the consul during startup
  subscriber:
    build: ./consul/
    container_name: dummy-subscriber
    depends_on:
      - consul
      - elasticsearch
      # - kafka
    networks:
      shared-net:
        ipv4_address: 192.168.56.6
    environment:
      - CONSUL_PORT=8500
      - CONSUL_HOST=192.168.56.2 

  search:
    build: ./search_service/
    container_name: search-service
    hostname: searh-service
    depends_on:
      - consul
      - subscriber
      - elasticsearch
      #- kafka
    networks:
      shared-net:
        ipv4_address: 192.168.56.3
    ports:
      - "9300:9300"
    environment:
      - CONSUL_PORT=8500
      - CONSUL_HOST=192.168.56.2 
      - ELASTIC_PASSWORD=lyfAKzoo0NYA17iIBmv4
      - ELASTIC_USER=elastic
      - INSTANCE_HOST=192.168.56.2 
      - INSTANCE_PORT=9300

  dummy-page-retriever-1:
    image: python:3.11-alpine
    container_name: page-retriever-1
    hostname: page-retriever-1
    expose:
      - 8000
    ports:
      - "8001:8000"
    networks:
      shared-net:
        ipv4_address: 192.168.56.7
    command: python3 -m http.server 8000

  dummy-page-retriever-2:
    image: python:3.11-alpine
    container_name: page-retriever-2
    hostname: page-retriever-2
    expose:
      - 8000
    ports:
      - "8002:8000"
    networks:
      shared-net:
        ipv4_address: 192.168.56.8
    command: python3 -m http.server 8000

  dummy-page-retriever-3:
    image: python:3.11-alpine
    container_name: page-retriever-3
    hostname: page-retriever-3
    expose:
      - 8000
    ports:
      - "8003:8000"
    networks:
      shared-net:
        ipv4_address: 192.168.56.9
    command: python3 -m http.server 8000

  dummy-page-adder:
    image: python:3.11-alpine
    container_name: page-adder
    hostname: page-adder
    expose:
      - 8000
    ports:
      - "8004:8000"
    networks:
      shared-net:
        ipv4_address: 192.168.56.10
    command: python3 -m http.server 8000

  dummy-auth-service:
    image: python:3.11-alpine
    container_name: auth-service
    hostname: auth-service
    expose:
      - 8000
    ports:
      - "8005:8000"
    networks:
      shared-net:
        ipv4_address: 192.168.56.11
    command: python3 -m http.server 8000

  # TODO: add kafka on 192.168.56.5 

  api-gateway:
    image: nginx:latest
    container_name: api-gateway
    hostname: api-gateway
    depends_on:
      - dummy-page-retriever-1
      - dummy-page-retriever-2
      - dummy-page-retriever-3
      - dummy-page-adder
      - dummy-auth-service
    ports:
      - "8100:80"
    volumes:
      - ./nginx/configs/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/static:/usr/share/nginx/html
    networks:
      shared-net:
        ipv4_address: 192.168.56.12

volumes:
  glusterfs-data1:
  glusterfs-data2:
  glusterfs-data3:

networks:
  glusterfs-net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24

  shared-net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.56.0/24

